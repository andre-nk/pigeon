{
  "contentTypes": [
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "aboutSection",
        "type": "ContentType",
        "createdAt": "2024-04-04T09:13:38.942Z",
        "updatedAt": "2024-04-08T08:49:38.337Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 3,
        "publishedAt": "2024-04-08T08:49:38.337Z",
        "firstPublishedAt": "2024-04-04T09:13:39.501Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 2,
        "version": 4,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/content_types/aboutSection"
      },
      "displayField": "title",
      "name": "About Section",
      "description": "",
      "fields": [
        {
          "id": "title",
          "name": "Title",
          "type": "Symbol",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "content",
          "name": "Content",
          "type": "RichText",
          "localized": false,
          "required": true,
          "validations": [
            {
              "enabledMarks": [
                "bold",
                "italic",
                "underline",
                "code",
                "superscript",
                "subscript"
              ],
              "message": "Only bold, italic, underline, code, superscript, and subscript marks are allowed"
            },
            {
              "enabledNodeTypes": [
                "heading-1",
                "heading-2",
                "heading-3",
                "heading-4",
                "heading-5",
                "heading-6",
                "ordered-list",
                "unordered-list",
                "hr",
                "blockquote",
                "embedded-entry-block",
                "embedded-asset-block",
                "table",
                "hyperlink",
                "entry-hyperlink",
                "asset-hyperlink",
                "embedded-entry-inline"
              ],
              "message": "Only heading 1, heading 2, heading 3, heading 4, heading 5, heading 6, ordered list, unordered list, horizontal rule, quote, block entry, asset, table, link to Url, link to entry, link to asset, and inline entry nodes are allowed"
            },
            {
              "nodes": {
              }
            }
          ],
          "disabled": false,
          "omitted": false
        }
      ]
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "projectSection",
        "type": "ContentType",
        "createdAt": "2024-04-04T09:15:57.178Z",
        "updatedAt": "2024-04-08T08:50:00.914Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 3,
        "publishedAt": "2024-04-08T08:50:00.914Z",
        "firstPublishedAt": "2024-04-04T09:15:57.790Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 2,
        "version": 4,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/content_types/projectSection"
      },
      "displayField": "title",
      "name": "Project Section",
      "description": "",
      "fields": [
        {
          "id": "title",
          "name": "Title",
          "type": "Symbol",
          "localized": false,
          "required": true,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "content",
          "name": "Content",
          "type": "RichText",
          "localized": false,
          "required": true,
          "validations": [
            {
              "enabledMarks": [
                "bold",
                "italic",
                "underline",
                "code",
                "superscript",
                "subscript"
              ],
              "message": "Only bold, italic, underline, code, superscript, and subscript marks are allowed"
            },
            {
              "enabledNodeTypes": [
                "heading-1",
                "heading-2",
                "heading-3",
                "heading-4",
                "heading-5",
                "heading-6",
                "ordered-list",
                "unordered-list",
                "hr",
                "blockquote",
                "embedded-entry-block",
                "embedded-asset-block",
                "table",
                "hyperlink",
                "entry-hyperlink",
                "asset-hyperlink",
                "embedded-entry-inline"
              ],
              "message": "Only heading 1, heading 2, heading 3, heading 4, heading 5, heading 6, ordered list, unordered list, horizontal rule, quote, block entry, asset, table, link to Url, link to entry, link to asset, and inline entry nodes are allowed"
            },
            {
              "nodes": {
              }
            }
          ],
          "disabled": false,
          "omitted": false
        }
      ]
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "project",
        "type": "ContentType",
        "createdAt": "2024-04-04T09:21:48.703Z",
        "updatedAt": "2024-04-08T08:51:29.439Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 7,
        "publishedAt": "2024-04-08T08:51:29.439Z",
        "firstPublishedAt": "2024-04-04T09:21:49.405Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 4,
        "version": 8,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/content_types/project"
      },
      "displayField": "shortTitle",
      "name": "Project",
      "description": "",
      "fields": [
        {
          "id": "thumbnail",
          "name": "Thumbnail",
          "type": "Link",
          "localized": false,
          "required": true,
          "validations": [
            {
              "linkMimetypeGroup": [
                "image"
              ]
            }
          ],
          "disabled": false,
          "omitted": false,
          "linkType": "Asset"
        },
        {
          "id": "shortTitle",
          "name": "Short Title",
          "type": "Symbol",
          "localized": false,
          "required": true,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "slug",
          "name": "Slug",
          "type": "Symbol",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "longTitle",
          "name": "Long Title",
          "type": "Symbol",
          "localized": false,
          "required": true,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "isFeatured",
          "name": "Is Featured",
          "type": "Boolean",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "defaultValue": {
            "en-US": false
          },
          "disabled": false,
          "omitted": false
        },
        {
          "id": "caption",
          "name": "Caption",
          "type": "RichText",
          "localized": false,
          "required": true,
          "validations": [
            {
              "enabledMarks": [
                "bold",
                "italic",
                "underline",
                "code",
                "superscript",
                "subscript"
              ],
              "message": "Only bold, italic, underline, code, superscript, and subscript marks are allowed"
            },
            {
              "enabledNodeTypes": [
                "heading-1",
                "heading-2",
                "heading-3",
                "heading-4",
                "heading-5",
                "heading-6",
                "ordered-list",
                "unordered-list",
                "hr",
                "blockquote",
                "embedded-entry-block",
                "embedded-asset-block",
                "table",
                "hyperlink",
                "entry-hyperlink",
                "asset-hyperlink",
                "embedded-entry-inline"
              ],
              "message": "Only heading 1, heading 2, heading 3, heading 4, heading 5, heading 6, ordered list, unordered list, horizontal rule, quote, block entry, asset, table, link to Url, link to entry, link to asset, and inline entry nodes are allowed"
            },
            {
              "nodes": {
              }
            }
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "article",
          "name": "Article",
          "type": "RichText",
          "localized": false,
          "required": true,
          "validations": [
            {
              "enabledMarks": [
                "bold",
                "italic",
                "underline",
                "code",
                "superscript",
                "subscript"
              ],
              "message": "Only bold, italic, underline, code, superscript, and subscript marks are allowed"
            },
            {
              "enabledNodeTypes": [
                "heading-1",
                "heading-2",
                "heading-3",
                "heading-4",
                "heading-5",
                "heading-6",
                "ordered-list",
                "unordered-list",
                "hr",
                "blockquote",
                "embedded-entry-block",
                "embedded-asset-block",
                "table",
                "hyperlink",
                "entry-hyperlink",
                "asset-hyperlink",
                "embedded-entry-inline"
              ],
              "message": "Only heading 1, heading 2, heading 3, heading 4, heading 5, heading 6, ordered list, unordered list, horizontal rule, quote, block entry, asset, table, link to Url, link to entry, link to asset, and inline entry nodes are allowed"
            },
            {
              "nodes": {
              }
            }
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "startDate",
          "name": "Start Date",
          "type": "Date",
          "localized": false,
          "required": true,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "endDate",
          "name": "End Date",
          "type": "Date",
          "localized": false,
          "required": true,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "category",
          "name": "Category",
          "type": "Array",
          "localized": false,
          "required": true,
          "validations": [
          ],
          "disabled": false,
          "omitted": false,
          "items": {
            "type": "Symbol",
            "validations": [
            ]
          }
        },
        {
          "id": "techstack",
          "name": "Techstack",
          "type": "Array",
          "localized": false,
          "required": true,
          "validations": [
          ],
          "disabled": false,
          "omitted": false,
          "items": {
            "type": "Symbol",
            "validations": [
            ]
          }
        },
        {
          "id": "client",
          "name": "Client",
          "type": "Symbol",
          "localized": false,
          "required": true,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "designLink",
          "name": "Design Link",
          "type": "Symbol",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "sourceCodeLink",
          "name": "Source Code Link",
          "type": "Symbol",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "demoLink",
          "name": "Demo Link",
          "type": "Symbol",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        }
      ]
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "articles",
        "type": "ContentType",
        "createdAt": "2024-04-04T09:25:15.045Z",
        "updatedAt": "2024-04-08T08:52:08.012Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 5,
        "publishedAt": "2024-04-08T08:52:08.012Z",
        "firstPublishedAt": "2024-04-04T09:25:15.736Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 3,
        "version": 6,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/content_types/articles"
      },
      "displayField": "title",
      "name": "Articles",
      "description": "",
      "fields": [
        {
          "id": "thumbnail",
          "name": "Thumbnail",
          "type": "Link",
          "localized": false,
          "required": true,
          "validations": [
            {
              "linkMimetypeGroup": [
                "image"
              ]
            }
          ],
          "disabled": false,
          "omitted": false,
          "linkType": "Asset"
        },
        {
          "id": "title",
          "name": "Title",
          "type": "Symbol",
          "localized": false,
          "required": true,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "slug",
          "name": "Slug",
          "type": "Symbol",
          "localized": false,
          "required": true,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "isFeatured",
          "name": "Is Featured",
          "type": "Boolean",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "defaultValue": {
            "en-US": false
          },
          "disabled": false,
          "omitted": false
        },
        {
          "id": "content",
          "name": "Content",
          "type": "RichText",
          "localized": false,
          "required": false,
          "validations": [
            {
              "enabledMarks": [
                "bold",
                "italic",
                "underline",
                "code",
                "superscript",
                "subscript"
              ],
              "message": "Only bold, italic, underline, code, superscript, and subscript marks are allowed"
            },
            {
              "enabledNodeTypes": [
                "heading-1",
                "heading-2",
                "heading-3",
                "heading-4",
                "heading-5",
                "heading-6",
                "ordered-list",
                "unordered-list",
                "hr",
                "blockquote",
                "embedded-entry-block",
                "embedded-asset-block",
                "table",
                "hyperlink",
                "entry-hyperlink",
                "asset-hyperlink",
                "embedded-entry-inline"
              ],
              "message": "Only heading 1, heading 2, heading 3, heading 4, heading 5, heading 6, ordered list, unordered list, horizontal rule, quote, block entry, asset, table, link to Url, link to entry, link to asset, and inline entry nodes are allowed"
            },
            {
              "nodes": {
              }
            }
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "releasedDate",
          "name": "Released Date",
          "type": "Date",
          "localized": false,
          "required": true,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        }
      ]
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "pigeonLetter",
        "type": "ContentType",
        "createdAt": "2024-12-20T06:37:02.249Z",
        "updatedAt": "2024-12-20T06:37:03.030Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 1,
        "publishedAt": "2024-12-20T06:37:03.030Z",
        "firstPublishedAt": "2024-12-20T06:37:03.030Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 1,
        "version": 2,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/content_types/pigeonLetter"
      },
      "displayField": "title",
      "name": "Pigeon Letter",
      "description": "",
      "fields": [
        {
          "id": "title",
          "name": "Title (Undisplayed)",
          "type": "Symbol",
          "localized": false,
          "required": true,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "slug",
          "name": "Slug",
          "type": "Symbol",
          "localized": false,
          "required": true,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "greet",
          "name": "Greet",
          "type": "Symbol",
          "localized": false,
          "required": true,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "subject",
          "name": "Subject",
          "type": "Symbol",
          "localized": false,
          "required": true,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "message",
          "name": "Message",
          "type": "RichText",
          "localized": false,
          "required": false,
          "validations": [
            {
              "enabledMarks": [
                "italic",
                "underline",
                "superscript",
                "subscript",
                "bold",
                "strikethrough"
              ],
              "message": "Only italic, underline, superscript, subscript, bold, and strikethrough marks are allowed"
            },
            {
              "enabledNodeTypes": [
                "embedded-asset-block",
                "asset-hyperlink"
              ],
              "message": "Only asset and link to asset nodes are allowed"
            },
            {
              "nodes": {
              }
            }
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "gallery",
          "name": "Gallery",
          "type": "Array",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false,
          "items": {
            "type": "Link",
            "validations": [
              {
                "linkMimetypeGroup": [
                  "image"
                ]
              }
            ],
            "linkType": "Asset"
          }
        },
        {
          "id": "video",
          "name": "Video",
          "type": "Link",
          "localized": false,
          "required": false,
          "validations": [
            {
              "linkMimetypeGroup": [
                "video"
              ]
            }
          ],
          "disabled": false,
          "omitted": false,
          "linkType": "Asset"
        }
      ]
    }
  ],
  "tags": [
  ],
  "editorInterfaces": [
    {
      "sys": {
        "id": "default",
        "type": "EditorInterface",
        "space": {
          "sys": {
            "id": "dobqt42vphlv",
            "type": "Link",
            "linkType": "Space"
          }
        },
        "version": 4,
        "createdAt": "2024-04-04T09:13:39.690Z",
        "createdBy": {
          "sys": {
            "id": "5mj7TfaNXDpOIpSHnHEC4W",
            "type": "Link",
            "linkType": "User"
          }
        },
        "updatedAt": "2024-04-08T08:49:39.689Z",
        "updatedBy": {
          "sys": {
            "id": "5mj7TfaNXDpOIpSHnHEC4W",
            "type": "Link",
            "linkType": "User"
          }
        },
        "contentType": {
          "sys": {
            "id": "aboutSection",
            "type": "Link",
            "linkType": "ContentType"
          }
        },
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        }
      },
      "controls": [
        {
          "fieldId": "title",
          "widgetId": "singleLine",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "content",
          "widgetId": "richTextEditor",
          "widgetNamespace": "builtin"
        }
      ]
    },
    {
      "sys": {
        "id": "default",
        "type": "EditorInterface",
        "space": {
          "sys": {
            "id": "dobqt42vphlv",
            "type": "Link",
            "linkType": "Space"
          }
        },
        "version": 4,
        "createdAt": "2024-04-04T09:15:57.985Z",
        "createdBy": {
          "sys": {
            "id": "5mj7TfaNXDpOIpSHnHEC4W",
            "type": "Link",
            "linkType": "User"
          }
        },
        "updatedAt": "2024-04-08T08:50:02.297Z",
        "updatedBy": {
          "sys": {
            "id": "5mj7TfaNXDpOIpSHnHEC4W",
            "type": "Link",
            "linkType": "User"
          }
        },
        "contentType": {
          "sys": {
            "id": "projectSection",
            "type": "Link",
            "linkType": "ContentType"
          }
        },
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        }
      },
      "controls": [
        {
          "fieldId": "title",
          "widgetId": "singleLine",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "content",
          "widgetId": "richTextEditor",
          "widgetNamespace": "builtin"
        }
      ]
    },
    {
      "sys": {
        "id": "default",
        "type": "EditorInterface",
        "space": {
          "sys": {
            "id": "dobqt42vphlv",
            "type": "Link",
            "linkType": "Space"
          }
        },
        "version": 8,
        "createdAt": "2024-04-04T09:21:49.610Z",
        "createdBy": {
          "sys": {
            "id": "5mj7TfaNXDpOIpSHnHEC4W",
            "type": "Link",
            "linkType": "User"
          }
        },
        "updatedAt": "2024-04-08T08:51:30.513Z",
        "updatedBy": {
          "sys": {
            "id": "5mj7TfaNXDpOIpSHnHEC4W",
            "type": "Link",
            "linkType": "User"
          }
        },
        "contentType": {
          "sys": {
            "id": "project",
            "type": "Link",
            "linkType": "ContentType"
          }
        },
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        }
      },
      "controls": [
        {
          "fieldId": "thumbnail",
          "widgetId": "assetLinkEditor",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "shortTitle",
          "widgetId": "singleLine",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "slug",
          "widgetId": "slugEditor",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "longTitle",
          "widgetId": "singleLine",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "isFeatured",
          "widgetId": "boolean",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "caption",
          "widgetId": "richTextEditor",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "article",
          "widgetId": "richTextEditor",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "startDate",
          "widgetId": "datePicker",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "endDate",
          "widgetId": "datePicker",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "category",
          "widgetId": "tagEditor",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "techstack",
          "widgetId": "tagEditor",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "client",
          "widgetId": "singleLine",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "designLink",
          "widgetId": "singleLine",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "sourceCodeLink",
          "widgetId": "singleLine",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "demoLink",
          "widgetId": "singleLine",
          "widgetNamespace": "builtin"
        }
      ]
    },
    {
      "sys": {
        "id": "default",
        "type": "EditorInterface",
        "space": {
          "sys": {
            "id": "dobqt42vphlv",
            "type": "Link",
            "linkType": "Space"
          }
        },
        "version": 6,
        "createdAt": "2024-04-04T09:25:15.895Z",
        "createdBy": {
          "sys": {
            "id": "5mj7TfaNXDpOIpSHnHEC4W",
            "type": "Link",
            "linkType": "User"
          }
        },
        "updatedAt": "2024-04-08T08:52:09.158Z",
        "updatedBy": {
          "sys": {
            "id": "5mj7TfaNXDpOIpSHnHEC4W",
            "type": "Link",
            "linkType": "User"
          }
        },
        "contentType": {
          "sys": {
            "id": "articles",
            "type": "Link",
            "linkType": "ContentType"
          }
        },
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        }
      },
      "controls": [
        {
          "fieldId": "thumbnail",
          "widgetId": "assetLinkEditor",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "title",
          "widgetId": "singleLine",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "slug",
          "widgetId": "slugEditor",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "isFeatured",
          "widgetId": "boolean",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "content",
          "widgetId": "richTextEditor",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "releasedDate",
          "widgetId": "datePicker",
          "widgetNamespace": "builtin"
        }
      ]
    },
    {
      "sys": {
        "id": "default",
        "type": "EditorInterface",
        "space": {
          "sys": {
            "id": "dobqt42vphlv",
            "type": "Link",
            "linkType": "Space"
          }
        },
        "version": 2,
        "createdAt": "2024-12-20T06:37:03.218Z",
        "createdBy": {
          "sys": {
            "id": "5mj7TfaNXDpOIpSHnHEC4W",
            "type": "Link",
            "linkType": "User"
          }
        },
        "updatedAt": "2024-12-20T06:37:04.329Z",
        "updatedBy": {
          "sys": {
            "id": "5mj7TfaNXDpOIpSHnHEC4W",
            "type": "Link",
            "linkType": "User"
          }
        },
        "contentType": {
          "sys": {
            "id": "pigeonLetter",
            "type": "Link",
            "linkType": "ContentType"
          }
        },
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        }
      },
      "controls": [
        {
          "fieldId": "title",
          "widgetId": "singleLine",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "slug",
          "widgetId": "slugEditor",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "greet",
          "widgetId": "singleLine",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "subject",
          "widgetId": "singleLine",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "message",
          "widgetId": "richTextEditor",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "gallery",
          "widgetId": "assetGalleryEditor",
          "widgetNamespace": "builtin"
        },
        {
          "fieldId": "video",
          "widgetId": "assetLinkEditor",
          "widgetNamespace": "builtin"
        }
      ]
    }
  ],
  "entries": [
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "2f18WpxKpEsSDmWshZHRVr",
        "type": "Entry",
        "createdAt": "2024-04-07T06:48:35.075Z",
        "updatedAt": "2024-04-26T09:19:47.912Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 24,
        "publishedAt": "2024-04-26T09:19:47.912Z",
        "firstPublishedAt": "2024-04-07T06:48:41.438Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 5,
        "version": 25,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "automationTags": [
        ],
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "aboutSection"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/entries/2f18WpxKpEsSDmWshZHRVr"
      },
      "fields": {
        "title": {
          "en-US": "About Section"
        },
        "content": {
          "en-US": {
            "nodeType": "document",
            "data": {
            },
            "content": [
              {
                "nodeType": "paragraph",
                "data": {
                },
                "content": [
                  {
                    "nodeType": "text",
                    "value": "I'm ",
                    "marks": [
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": "Andreas Notokusumo",
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": ", a versatile ",
                    "marks": [
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": "software engineer",
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": " and ",
                    "marks": [
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": "Computer Science student",
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": " at Universitas Gadjah Mada in Yogyakarta, Indonesia. With over 4 years of diverse experience, I'm forever grateful for opportunities to delve into numerous facets of technology, from full-stack ",
                    "marks": [
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": "web",
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": " development to ",
                    "marks": [
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": "mobile",
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": " app development, ",
                    "marks": [
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": "project management",
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": ", ",
                    "marks": [
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": "UI/UX",
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": " design, ",
                    "marks": [
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": "cloud",
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": " computing, and lately operating system (",
                    "marks": [
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": "OS",
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": ") development.\n",
                    "marks": [
                    ],
                    "data": {
                    }
                  }
                ]
              },
              {
                "nodeType": "paragraph",
                "data": {
                },
                "content": [
                  {
                    "nodeType": "text",
                    "value": "Throughout these years, the one true calling has always been ",
                    "marks": [
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": "software engineering",
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": ". I'm intrigued by the intricacies of delivering production-grade apps, starting from the architectural design, leveraging discipline in the coding process, and also the human dynamics behind the project.\n",
                    "marks": [
                    ],
                    "data": {
                    }
                  }
                ]
              },
              {
                "nodeType": "paragraph",
                "data": {
                },
                "content": [
                  {
                    "nodeType": "text",
                    "value": "Above all that, I hold a profound respect for the ",
                    "marks": [
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": "fundamental concepts",
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "data": {
                    }
                  },
                  {
                    "nodeType": "text",
                    "value": " of Computer Science, which provide the necessary abstraction for innovation and problem-solving.\nIn essence, as a dedicated CS student, I actively seek out challenging opportunities to further expand my skills and knowledge. I am committed to refining my understanding of fundamental concepts while pushing the boundaries of what's possible in software development. So, let's connect and explore how we can innovate together.",
                    "marks": [
                    ],
                    "data": {
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    },
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "3JFQQp2KFmUJSHggORsdHL",
        "type": "Entry",
        "createdAt": "2024-04-07T08:24:55.177Z",
        "updatedAt": "2024-04-18T07:32:52.751Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 18,
        "publishedAt": "2024-04-18T07:32:52.751Z",
        "firstPublishedAt": "2024-04-07T08:25:09.944Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 3,
        "version": 19,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "automationTags": [
        ],
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "projectSection"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/entries/3JFQQp2KFmUJSHggORsdHL"
      },
      "fields": {
        "title": {
          "en-US": "Project Section"
        },
        "content": {
          "en-US": {
            "nodeType": "document",
            "data": {
            },
            "content": [
              {
                "nodeType": "paragraph",
                "data": {
                },
                "content": [
                  {
                    "nodeType": "text",
                    "value": "My working method practices simultaneous exploration of the creative mind, a logical approach based on the fundamentals, and also high level of discipline. Which, resulted in several projects, some of which are properly documented as follows.",
                    "marks": [
                    ],
                    "data": {
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    },
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "6a4ge7E4BShKTkhMy2boaQ",
        "type": "Entry",
        "createdAt": "2024-04-07T08:32:02.342Z",
        "updatedAt": "2024-04-08T09:02:29.070Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 11,
        "publishedAt": "2024-04-08T09:02:29.070Z",
        "firstPublishedAt": "2024-04-07T08:33:11.594Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 3,
        "version": 12,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "automationTags": [
        ],
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "project"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/entries/6a4ge7E4BShKTkhMy2boaQ"
      },
      "fields": {
        "thumbnail": {
          "en-US": {
            "sys": {
              "type": "Link",
              "linkType": "Asset",
              "id": "7d6H2QePhRC2YkkxkchQrz"
            }
          }
        },
        "shortTitle": {
          "en-US": "Handles"
        },
        "slug": {
          "en-US": "handles"
        },
        "longTitle": {
          "en-US": "Handles "
        },
        "caption": {
          "en-US": {
            "data": {
            },
            "content": [
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum  sollicitudin sapien quam. Phasellus orci nulla, lobortis vitae dui non,  fermentum pulvinar nunc. Vivamus at eros sem. Vivamus eget vestibulum  ante. Maecenas lacinia arcu eu eros.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              }
            ],
            "nodeType": "document"
          }
        },
        "article": {
          "en-US": {
            "data": {
            },
            "content": [
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum  sollicitudin sapien quam. Phasellus orci nulla, lobortis vitae dui non,  fermentum pulvinar nunc. Vivamus at eros sem. Vivamus eget vestibulum  ante. Maecenas lacinia arcu eu eros.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              }
            ],
            "nodeType": "document"
          }
        },
        "startDate": {
          "en-US": "2024-04-07T00:00+07:00"
        },
        "endDate": {
          "en-US": "2024-04-07T00:00+07:00"
        },
        "category": {
          "en-US": [
            "Chat App",
            "Mobile"
          ]
        },
        "techstack": {
          "en-US": [
            "Firebase",
            "Flutter",
            "RevenueCat",
            "Agora"
          ]
        },
        "client": {
          "en-US": "Johnny Sommers"
        }
      }
    },
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "5ByF8SgWREYdW0DtlfV1vI",
        "type": "Entry",
        "createdAt": "2024-04-07T08:33:20.771Z",
        "updatedAt": "2024-04-28T03:55:50.457Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 57,
        "publishedAt": "2024-04-28T03:55:50.457Z",
        "firstPublishedAt": "2024-04-07T08:33:23.854Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 7,
        "version": 58,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "automationTags": [
        ],
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "project"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/entries/5ByF8SgWREYdW0DtlfV1vI"
      },
      "fields": {
        "thumbnail": {
          "en-US": {
            "sys": {
              "type": "Link",
              "linkType": "Asset",
              "id": "1Ode2RkhjpIKtt4DIkBKxX"
            }
          }
        },
        "shortTitle": {
          "en-US": "Pemira Himakom"
        },
        "slug": {
          "en-US": "pemira-himakom-2023"
        },
        "longTitle": {
          "en-US": "Pemira Himakom: Voting App with Token Encyrption Approach"
        },
        "isFeatured": {
          "en-US": true
        },
        "caption": {
          "en-US": {
            "data": {
            },
            "content": [
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Voting app for campus organization head election implemented with novel token encryption approach",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              }
            ],
            "nodeType": "document"
          }
        },
        "article": {
          "en-US": {
            "data": {
            },
            "content": [
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "I must say, Pemira 2023 was a rather fascinating web app project in my college years as a CS student. For some context, ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "italic"
                      }
                    ],
                    "value": "Pemira (which stands for Pemilihan Raya in Indonesian) is an annual election event for the new head of our student organization at a major level called Himakom",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ". I was a member of OmahTI, a subsidiary organization of Himakom that focuses on technical skills, while the former focuses on human resources. At the beginning of the OmahTI cabinet, I was given the liberty by the OmahTI CEO to choose which project I would work on, and I ultimately chose this project, simply because the voting app isn't just some CRUD app. Thus, around November 2023, I was finally assigned to be the IT Head of Pemira 2023, with Dilya Salsabilla as my lead.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Requirements",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "heading-2"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "The requirements were straightforward: develop a web-based voting system to display the candidate profiles and summarize the voting results. Furthermore, as I work on designing the app's interface (UI/UX), I need to ensure that it aligns with the event's theme of a fairytale garden. This is an interesting aspect of the project that I am looking forward to. The primary aim was to ensure the smooth functioning of the voting system, which heavily relied on the efficiency of the Pemira 2023 personnel in managing the on-site activities.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "The voting mechanism that we agreed upon was quite simple. At D-Day, the staff will rotate to each classroom and call each student to take a vote on the staff's laptops. Last year, the approach was to give each student a unique printed token. The student needs to use their token to access the app and vote. I found that this flow is unnecessarily ineffective, lacks anonymity, and ultimately can't keep track of essential data to be analyzed later on (class, year, gender, etc.). It became clear that we need a new approach.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "New approach",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "heading-2"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "From this point, I proposed a new approach. Instead of using an arbitrary token for logging in, the voter will input their student ID (which they know). This ID will be used to query a predefined database, listing all voters and their respective data (such as class, year, gender, etc.). If the query returns a result, and that student is \"enabled\" to vote, the web app will allow the voter to vote. This query data will be stripped out into some essential ones, and then encrypted to a unique token. When a voter votes for a candidate, this token will be inserted into the voter table, which later on, could be safely decrypted and used for the final votes analytics. This way, the anonymity of the voters is guaranteed, the flow is seamless on the user side, and the voter's data can be extracted dynamically. The proposed solution was ultimately accepted, and we proceeded to the development phase.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                  "target": {
                    "sys": {
                      "id": "pxddQ6RhizyHF5sjGvC2R",
                      "type": "Link",
                      "linkType": "Asset"
                    }
                  }
                },
                "content": [
                ],
                "nodeType": "embedded-asset-block"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Development",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "heading-2"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "About the tech stack, I decided to capitalize on a simplistic approach. Specifically, I have chosen NextJS and Tailwind for the front-end, owing to familiarity with my team members, and Firebase Firestore for the back-end service. For the UI/UX Design, we mainly followed Pemira's design guidelines created by the design team and utilized the Tailwind design system for rapid prototyping and later development accuracy. ",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "In such a generous timeframe given by the Pemira team, I was able to coordinate a smooth development process. There are no particular things I'd like to highlight, since the underlying data flow is just another form of CRUD to Firebase Firestore, from an NextJS Client. In remarks, I haven't done any proper testing due to our team's inexperience, which indeed could improve the overall code quality.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Unfortunately, due to some internal conflicts that are isolated from our technical concerns here, the Pemira 2023 is canceled. But, a month later, the project's source code is reused by my colleague in an identical election event but in the Statistics major; ultimately proving the feasibility and effectivity of my token encyrption approach.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                ],
                "nodeType": "hr"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "italic"
                      }
                    ],
                    "value": "*The design and source code of this project is managed by Himakom, but feel free to further contact me to access the respective repository.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              }
            ],
            "nodeType": "document"
          }
        },
        "startDate": {
          "en-US": "2023-10-15T00:00+07:00"
        },
        "endDate": {
          "en-US": "2023-11-05T00:00+07:00"
        },
        "category": {
          "en-US": [
            "Voting App",
            "Web App"
          ]
        },
        "techstack": {
          "en-US": [
            "NextJS",
            "Firebase",
            "Tailwind"
          ]
        },
        "client": {
          "en-US": "Himakom"
        }
      }
    },
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "3E0OO0P63j0NlY1ctfijZ4",
        "type": "Entry",
        "createdAt": "2024-04-07T08:33:29.570Z",
        "updatedAt": "2024-08-14T09:37:08.984Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 23,
        "publishedAt": "2024-08-14T09:37:08.984Z",
        "firstPublishedAt": "2024-04-07T08:33:32.026Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 4,
        "version": 24,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "fieldStatus": {
          "*": {
            "en-US": "published"
          }
        },
        "automationTags": [
        ],
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "project"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/entries/3E0OO0P63j0NlY1ctfijZ4"
      },
      "fields": {
        "thumbnail": {
          "en-US": {
            "sys": {
              "type": "Link",
              "linkType": "Asset",
              "id": "1jBWNCZY1WbIwTtManuVSl"
            }
          }
        },
        "shortTitle": {
          "en-US": "BEM FEB UGM Official Site"
        },
        "slug": {
          "en-US": "bem-feb-ugm"
        },
        "longTitle": {
          "en-US": "BEM FEB UGM Official Site"
        },
        "isFeatured": {
          "en-US": true
        },
        "caption": {
          "en-US": {
            "data": {
            },
            "content": [
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Developed BEM FEB UGM's official website, optimizing user experience and setting the foundation for OmahTI’s innovative project CLI.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              }
            ],
            "nodeType": "document"
          }
        },
        "article": {
          "en-US": {
            "data": {
            },
            "content": [
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "This project marks my first-ever involvement in OmahTI, nearly a year after joining, and it also represents my debut as a project manager alongside Albert Cristianto Halim. The project itself was straightforward, focusing on a website for BEM FEB UGM’s organizational profile and a CMS to streamline management processes. Despite its simplicity, this project laid the groundwork for the development of OmahTI’s official CLI, which now generates Next.js templates for company profile sites. In fact, this very CLI was used to generate the BEM FEB UGM website!",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Requirements and Approach",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "heading-3"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Given the nature of a company site, our approach prioritized overall design (UI interfaces), site performance, and ease of use for BEM FEB UGM’s staff. Here’s how we tackled it:",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Content Clarification:",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      },
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " We began by clarifying the type of content they wanted to showcase, as this would dictate the content model in the CMS. They aimed to feature organizational information, current cabinet and hierarchy, publications, and events.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Design System:",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      },
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " The design system for the site was derived from their social media design guidelines. I appreciated their human-centric approach, with member photos and elegant gold and dark blue accents.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Domain and Hosting Preferences:",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      },
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " Finally, we discussed their domain and hosting preferences. The client already had an existing website and domain on Wix.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  }
                ],
                "nodeType": "ordered-list"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "With these points in mind, we crafted our solution: a company profile site built with Next.js and Contentful CMS. This combination provided high performance with minimal development effort and simplified content management through the CMS.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Development",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "heading-3"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Setting up the Next.js app followed the usual process using the create-next-app CLI, along with TailwindCSS. For Contentful, instead of manually defining types based on the content model, we used the official Contentful CLI to generate these files. For smaller components like the photo swiper, we utilized the Swiper library, while the video player on the landing page was handled by the react-player library. To achieve a smooth scrolling experience, we experimented with the Lenis library, which indeed improved scrolling smoothness but also made it slower.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "One of the most challenging aspects of the development was the hierarchy chart component. Our design featured a simplistic yet extensive chart with dozens of nodes. Unable to find a responsive solution that fit our needs, we decided to design multiple versions of the chart and export them as SVGs, displaying each version based on screen size. Additionally, we coded positioned transparent buttons over the chart to make it clickable, allowing users to navigate to each member’s page.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Hosting and Deployment",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "heading-3"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "After development, I personally handled the domain transfer from Wix to Vercel, which was chosen for its compatibility with Next.js. Fortunately, Wix offered a straightforward domain transfer process, allowing us to successfully launch the BEM FEB UGM official site at bemfebugm.com.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "OmahTI’s First CLI",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "heading-3"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "As mentioned earlier, this seemingly simple project ultimately led David Lois and me to develop a CLI for swiftly configuring generic company profile sites in OmahTI’s style. This CLI features Next.js, TailwindCSS, Lenis, and Contentful, and even accepts Contentful tokens to generate content model types during setup. The development and challenges faced during this process were quite complex and merit a separate discussion.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              }
            ],
            "nodeType": "document"
          }
        },
        "startDate": {
          "en-US": "2024-01-30T00:00+07:00"
        },
        "endDate": {
          "en-US": "2024-02-22T00:00+07:00"
        },
        "category": {
          "en-US": [
            "Company Profile Site",
            "UI/UX Design"
          ]
        },
        "techstack": {
          "en-US": [
            "NextJS",
            "Tailwind",
            "Contentful CMS"
          ]
        },
        "client": {
          "en-US": "BEM FEB UGM"
        },
        "demoLink": {
          "en-US": "bemfebugm.com"
        }
      }
    },
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "43rESMH2PaVFI8i49enPcs",
        "type": "Entry",
        "createdAt": "2024-04-07T08:33:37.853Z",
        "updatedAt": "2024-10-11T04:47:14.062Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 69,
        "publishedAt": "2024-10-11T04:47:14.062Z",
        "firstPublishedAt": "2024-04-07T08:33:40.171Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 6,
        "version": 70,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "fieldStatus": {
          "*": {
            "en-US": "published"
          }
        },
        "automationTags": [
        ],
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "project"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/entries/43rESMH2PaVFI8i49enPcs"
      },
      "fields": {
        "thumbnail": {
          "en-US": {
            "sys": {
              "type": "Link",
              "linkType": "Asset",
              "id": "4HribKCqPoXKUJV8R3lGlU"
            }
          }
        },
        "shortTitle": {
          "en-US": "Dogker"
        },
        "slug": {
          "en-US": "dogker"
        },
        "longTitle": {
          "en-US": "Dogker: Simplifying Container Management in the Cloud"
        },
        "isFeatured": {
          "en-US": true
        },
        "caption": {
          "en-US": {
            "data": {
            },
            "content": [
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "A platform for simplifying Docker container management in cloud environments, enabling seamless hosting and monitoring of containers.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              }
            ],
            "nodeType": "document"
          }
        },
        "article": {
          "en-US": {
            "data": {
            },
            "content": [
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "This project stands as the largest and most complex I've participated in so far. Developed for the Cloud Computing course (MII212610) under Mr. I Gede Mujiyatna, S.Kom., M.Kom., Dogker represents my first deep dive into cloud computing and containerization technologies. In essence, Dogker is an ambitious Container-as-a-Service (CaaS) platform that simplifies Docker container management in cloud environments, enabling users to host and monitor both stateless and stateful containers. Our team of five aimed to bridge the gap between complex vendor-specific tools (AWS, GCP, Azure) and the need for agile, user-friendly container management.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "Requirements and Approach",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "heading-2"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "While the course didn't require building a full-fledged application like Dogker, it emphasized key cloud-based solution characteristics such as resource provisioning, monitoring, and termination. Dogker is heavily inspired by the impressive Dockurr project led by my senior, Faiz Jazadi. We’re proud to carry forward this legacy and build upon it.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "As a CaaS platform, our approach focused on scalability, security, and ease of use. Despite being an experimental class project rather than an MVP, we put significant effort into providing Dogker with a robust infrastructure. Here’s how we approached it:",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Microservices",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": ": We adopted a microservices architecture, dividing our platform into distinct services: Authentication, Container Management, Monitoring, Billing, and Mailing. This challenge was particularly exciting for me, given my limited experience in managing such applications.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Cloud-Native Technologies:",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " We leveraged Docker Swarm for orchestration, and Prometheus and Grafana for monitoring. These technologies, initially daunting, proved integral to our architecture.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Billing: ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "To meet our lecturer's \"bonus point\" requirement, we implemented a deposit-based billing system using Midtrans as a payment gateway. Users top up their balance before using our services, with containers gracefully stopping if the balance is insufficient.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Front-end and Design: ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "While Dogker primarily focuses on back-end architecture, our front-end engineer/UI/UX designer, David, efficiently used NextJS and ShadCN (Tailwind-based) to rapidly develop the prototype. Client-server communication is handled via NextJS' server functions.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  }
                ],
                "nodeType": "ordered-list"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Our final solution integrates various technologies, including Golang, NestJS, and Next.js, chosen for their performance, use-case compatibility, and our preferences.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "Architecture",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "heading-2"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Dogker's architecture is composed of five main microservices, each handling distinct responsibilities within the platform. The services are designed to work together, ensuring scalability, security, and ease of use. Below is a detailed breakdown of each service, the technology stack used, and the reasoning behind these choices:",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Authentication Service (developed by Adam):",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "The Authentication Service is responsible for user registration, login, and token management. It is built using ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "NestJS",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " and ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "PostgreSQL",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": ".",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      },
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "content": [
                              {
                                "data": {
                                },
                                "content": [
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "bold"
                                      }
                                    ],
                                    "value": "NestJS ",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": "was chosen for its powerful dependency injection system, ",
                                    "nodeType": "text"
                                  }
                                ],
                                "nodeType": "paragraph"
                              },
                              {
                                "data": {
                                },
                                "content": [
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": "which simplifies the development of scalable and maintainable server-side applications. Additionally, NestJS supports TypeScript out-of-the-box, aligning with our team's expertise.",
                                    "nodeType": "text"
                                  }
                                ],
                                "nodeType": "paragraph"
                              }
                            ],
                            "nodeType": "list-item"
                          },
                          {
                            "data": {
                            },
                            "content": [
                              {
                                "data": {
                                },
                                "content": [
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "bold"
                                      }
                                    ],
                                    "value": "PostgreSQL ",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": "serves as the database, simply due to lack of interaction between users, does a simplistic solution will do.",
                                    "nodeType": "text"
                                  }
                                ],
                                "nodeType": "paragraph"
                              }
                            ],
                            "nodeType": "list-item"
                          }
                        ],
                        "nodeType": "unordered-list"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Container Service (developed by Lintang) ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "handles the provisioning, scaling, and lifecycle management of Docker containers. Implemented using ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Golang",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " and ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Docker Swarm",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": ", this service is the backbone of Dogker’s container management capabilities.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      },
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "content": [
                              {
                                "data": {
                                },
                                "content": [
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "bold"
                                      }
                                    ],
                                    "value": "Golang ",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": "was selected for its concurrency model, which is particularly well-suited for",
                                    "nodeType": "text"
                                  }
                                ],
                                "nodeType": "paragraph"
                              },
                              {
                                "data": {
                                },
                                "content": [
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": "handling multiple container operations efficiently",
                                    "nodeType": "text"
                                  }
                                ],
                                "nodeType": "paragraph"
                              }
                            ],
                            "nodeType": "list-item"
                          },
                          {
                            "data": {
                            },
                            "content": [
                              {
                                "data": {
                                },
                                "content": [
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "bold"
                                      }
                                    ],
                                    "value": "Docker Swarm ",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": "was chosen as the orchestration tool due to its native integration with Docker, ease of setup, and suitability for small to medium-sized deployments. Docker Swarm allows us to manage a cluster of Docker nodes and provides built-in load balancing.",
                                    "nodeType": "text"
                                  }
                                ],
                                "nodeType": "paragraph"
                              }
                            ],
                            "nodeType": "list-item"
                          }
                        ],
                        "nodeType": "unordered-list"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Monitoring Service (also developed by Lintang)",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " collects and visualizes container metrics, providing insights into the performance and health of the containers. It is powered by ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Prometheus",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " and ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Grafana",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": ".",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      },
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "content": [
                              {
                                "data": {
                                },
                                "content": [
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "bold"
                                      }
                                    ],
                                    "value": "Prometheus ",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": "was chosen for its powerful querying language (PromQL) and ",
                                    "nodeType": "text"
                                  }
                                ],
                                "nodeType": "paragraph"
                              },
                              {
                                "data": {
                                },
                                "content": [
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": "its ability to scrape metrics from services at defined intervals. It’s well-suited for monitoring dynamic cloud environments where services are constantly scaling.",
                                    "nodeType": "text"
                                  }
                                ],
                                "nodeType": "paragraph"
                              }
                            ],
                            "nodeType": "list-item"
                          },
                          {
                            "data": {
                            },
                            "content": [
                              {
                                "data": {
                                },
                                "content": [
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "bold"
                                      }
                                    ],
                                    "value": "Grafana",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": " is used to create customizable dashboards that visualize the metrics collected by Prometheus. Grafana’s ease of use and wide array of plugins made it the ideal choice for presenting monitoring data in a clear and actionable manner.",
                                    "nodeType": "text"
                                  }
                                ],
                                "nodeType": "paragraph"
                              }
                            ],
                            "nodeType": "list-item"
                          }
                        ],
                        "nodeType": "unordered-list"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Billing Service (developed by myself) ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "manages user deposits and usage charges, using ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Golang",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " and ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Midtrans",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " as the payment gateway.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      },
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "content": [
                              {
                                "data": {
                                },
                                "content": [
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "bold"
                                      }
                                    ],
                                    "value": "Golang",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": " was chosen here for the same reasons as in the Container Service: its efficiency and performance in handling concurrent processes. ",
                                    "nodeType": "text"
                                  }
                                ],
                                "nodeType": "paragraph"
                              }
                            ],
                            "nodeType": "list-item"
                          },
                          {
                            "data": {
                            },
                            "content": [
                              {
                                "data": {
                                },
                                "content": [
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "bold"
                                      }
                                    ],
                                    "value": "Midtrans",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": " was selected as the payment gateway due to its comprehensive API, ease of integration, and support for various payment methods commonly used in the region.",
                                    "nodeType": "text"
                                  }
                                ],
                                "nodeType": "paragraph"
                              }
                            ],
                            "nodeType": "list-item"
                          }
                        ],
                        "nodeType": "unordered-list"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Mailing Service (developed by David):",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "The Mailing Service is responsible for sending notifications to users, such as payment confirmations or alerts about container statuses. It is also built using ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Golang",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " for consistency and performance.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  }
                ],
                "nodeType": "unordered-list"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "Communication Between Services:",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "The microservices communicate via ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "gRPC",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " for efficient, low-latency interactions, and ",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      },
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "REST APIs",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " for broader compatibility with other systems, such as client-side app.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "RabbitMQ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " is used for asynchronous communication between the Monitoring and Billing services, allowing for scalable and reliable message passing. Each hour, monitoring service will send asynchronous message to Billing Service, so that the user's balance will be charged accordingly.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  }
                ],
                "nodeType": "unordered-list"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "Challenges",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "heading-2"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Our main challenges included:",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "Steep learning curves for new technologies like gRPC, Docker Swarm, and Prometheus.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "Integrating multiple microservices, especially asynchronous processes.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "Lack of an automated CI/CD pipeline, resulting in time-consuming manual deployments.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  }
                ],
                "nodeType": "unordered-list"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "Conclusion",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "heading-2"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Dogker pushed us to explore cutting-edge cloud technologies and best practices in software architecture. Throughout this project, I often relied on Lintang's expertise, particularly in areas where I was less familiar. This experience highlighted my need to deepen my understanding of cloud technologies and microservices architecture. Moving forward, I’m motivated to continue learning and improving my skills in these areas to contribute more effectively to similar projects in the future.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              }
            ],
            "nodeType": "document"
          }
        },
        "startDate": {
          "en-US": "2024-05-17T00:00+07:00"
        },
        "endDate": {
          "en-US": "2024-07-03T00:00+07:00"
        },
        "category": {
          "en-US": [
            "Docker",
            "CaaS",
            "PaaS",
            "Cloud"
          ]
        },
        "techstack": {
          "en-US": [
            "Golang",
            "NextJS",
            "NestJS",
            "Prometheus",
            "Docker",
            "Docker Swarm",
            "Grafana",
            "RabbitMQ",
            "gRPC",
            "Postgres"
          ]
        },
        "client": {
          "en-US": "-"
        }
      }
    },
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "4riCkBQnzwyv4knRYfulPN",
        "type": "Entry",
        "createdAt": "2024-04-07T08:36:13.521Z",
        "updatedAt": "2024-10-12T03:54:20.673Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 50,
        "publishedAt": "2024-10-12T03:54:20.673Z",
        "firstPublishedAt": "2024-04-07T08:36:16.086Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 7,
        "version": 51,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "fieldStatus": {
          "*": {
            "en-US": "published"
          }
        },
        "automationTags": [
        ],
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "project"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/entries/4riCkBQnzwyv4knRYfulPN"
      },
      "fields": {
        "thumbnail": {
          "en-US": {
            "sys": {
              "type": "Link",
              "linkType": "Asset",
              "id": "1FMmgP5RYflmvbCGRkcKvS"
            }
          }
        },
        "shortTitle": {
          "en-US": "UGMTC 2024"
        },
        "slug": {
          "en-US": "ugmtc-2024"
        },
        "longTitle": {
          "en-US": "UGMTC-2024"
        },
        "isFeatured": {
          "en-US": true
        },
        "caption": {
          "en-US": {
            "data": {
            },
            "content": [
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum  sollicitudin sapien quam. Phasellus orci nulla, lobortis vitae dui non,  fermentum pulvinar nunc. Vivamus at eros sem. Vivamus eget vestibulum  ante. Maecenas lacinia arcu eu eros.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              }
            ],
            "nodeType": "document"
          }
        },
        "article": {
          "en-US": {
            "nodeType": "document",
            "data": {
            },
            "content": [
              {
                "nodeType": "paragraph",
                "data": {
                },
                "content": [
                  {
                    "nodeType": "text",
                    "value": "UGMTC (Universitas Gadjah Mada Taekwondo Championship) 2024, a nationwide taekwondo competition. It’s the longest-running and most complex project I've ever handled, spanning from November 2023 to August 2024. So, what makes this project so intricate? Let’s dive in!",
                    "marks": [
                    ],
                    "data": {
                    }
                  }
                ]
              },
              {
                "nodeType": "heading-2",
                "data": {
                },
                "content": [
                  {
                    "nodeType": "text",
                    "value": "Requirements",
                    "marks": [
                    ],
                    "data": {
                    }
                  }
                ]
              },
              {
                "nodeType": "paragraph",
                "data": {
                },
                "content": [
                  {
                    "nodeType": "text",
                    "value": "As Ryan from Pitch Meeting would say: \"Unclear!\" That pretty much sums up the project requirements, which evolved progressively over time. Initially, I was asked to build a website to promote the competition, manage participant registration, and display match brackets. Sounds simple, right? Well, it wasn't. ",
                    "marks": [
                    ],
                    "data": {
                    }
                  }
                ]
              },
              {
                "nodeType": "paragraph",
                "data": {
                },
                "content": [
                  {
                    "nodeType": "text",
                    "value": "One major takeaway from this project was understanding how crucial the context is. I had little knowledge of Taekwondo as a sport, which made designing a fitting system even harder—especially since client requests often strayed far from practicality. When we started in November 2023, I had very limited technical information. The only concrete data I had was for the participant registration form, and even that was quite challenging. ",
                    "marks": [
                    ],
                    "data": {
                    }
                  }
                ]
              },
              {
                "nodeType": "paragraph",
                "data": {
                },
                "content": [
                  {
                    "nodeType": "text",
                    "value": "The athlete registration was split into two categories: \"Prestasi\" and \"Festival,\" each featuring two Taekwondo competition types—Kyorugi and Poomsae. On top of that, there were various additional attributes such as weight classes and belt classes. And, just as I was wrapping my head around it, major details like weight class, belt class and age class kept changing up until the event in August 2024. Just look at this illustration to get a glimpse of the athlete's type:",
                    "marks": [
                    ],
                    "data": {
                    }
                  }
                ]
              },
              {
                "nodeType": "embedded-asset-block",
                "data": {
                  "target": {
                    "sys": {
                      "id": "u8Vc9t6IBLTJDQ2PBl3Ha",
                      "type": "Link",
                      "linkType": "Asset"
                    }
                  }
                },
                "content": [
                ]
              },
              {
                "nodeType": "paragraph",
                "data": {
                },
                "content": [
                  {
                    "nodeType": "text",
                    "value": "In the end, given the constraints in budget and personnel, I had to make significant compromises while still trying to meet the client's needs. The final requirements can be summarized as: ",
                    "marks": [
                    ],
                    "data": {
                    }
                  }
                ]
              },
              {
                "nodeType": "blockquote",
                "data": {
                },
                "content": [
                  {
                    "nodeType": "paragraph",
                    "data": {
                    },
                    "content": [
                      {
                        "nodeType": "text",
                        "value": "Develop a website for the Taekwondo competition, including a landing page and a dashboard for athlete registration, ensuring all technical details are included, and handle payments at checkout.\"",
                        "marks": [
                        ],
                        "data": {
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "nodeType": "heading-2",
                "data": {
                },
                "content": [
                  {
                    "nodeType": "text",
                    "value": "Development",
                    "marks": [
                    ],
                    "data": {
                    }
                  }
                ]
              },
              {
                "nodeType": "paragraph",
                "data": {
                },
                "content": [
                  {
                    "nodeType": "text",
                    "value": "I stuck with my preferred tech stack for web projects: Next.js, Firebase, and Vercel. Here’s a breakdown of some major components I developed:",
                    "marks": [
                    ],
                    "data": {
                    }
                  }
                ]
              },
              {
                "nodeType": "unordered-list",
                "data": {
                },
                "content": [
                  {
                    "nodeType": "list-item",
                    "data": {
                    },
                    "content": [
                      {
                        "nodeType": "paragraph",
                        "data": {
                        },
                        "content": [
                          {
                            "nodeType": "text",
                            "value": "Landing Page: This was relatively straightforward, and I closely followed  the UI design by Wenka Wendira. However, the custom belt design took more time than anticipated.",
                            "marks": [
                            ],
                            "data": {
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nodeType": "list-item",
                    "data": {
                    },
                    "content": [
                      {
                        "nodeType": "paragraph",
                        "data": {
                        },
                        "content": [
                          {
                            "nodeType": "text",
                            "value": "Dashboard Page: One of my biggest challenges was optimizing the loading speed for athlete data, which included various filters for athlete types, weight classes, belt classes, and more. The solution lay in properly architecting the Firestore database and tweaking queries with React Hooks.",
                            "marks": [
                            ],
                            "data": {
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nodeType": "list-item",
                    "data": {
                    },
                    "content": [
                      {
                        "nodeType": "paragraph",
                        "data": {
                        },
                        "content": [
                          {
                            "nodeType": "text",
                            "value": "Payment System: Originally, I implemented Midtrans as the payment gateway, but due to document limitations, we switched to manual payment confirmation. To ensure order security, I used Google Cloud’s Cloud Task to create a Cron job that automatically cancels unconfirmed orders after 24 hours. Combined with Cloud Functions, this dynamically updated the  athletes' registration status.",
                            "marks": [
                            ],
                            "data": {
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nodeType": "list-item",
                    "data": {
                    },
                    "content": [
                      {
                        "nodeType": "paragraph",
                        "data": {
                        },
                        "content": [
                          {
                            "nodeType": "text",
                            "value": "Mailing: User notifications were handled seamlessly through Sendpulse’s  free SMTP service.",
                            "marks": [
                            ],
                            "data": {
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "nodeType": "list-item",
                    "data": {
                    },
                    "content": [
                      {
                        "nodeType": "paragraph",
                        "data": {
                        },
                        "content": [
                          {
                            "nodeType": "text",
                            "value": "Bracket Chart: This was, by far, the most challenging aspect. Initially, I planned to design a custom bracket using CSS. However, after testing a few libraries, I settled on one, only to realize it  couldn’t handle unbalanced trees. The final solution involved adding bye-charts or empty nodes to balance the tree. Thankfully, everything worked fine on D-Day, with only a few empty nodes.",
                            "marks": [
                            ],
                            "data": {
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "nodeType": "paragraph",
                "data": {
                },
                "content": [
                  {
                    "nodeType": "text",
                    "value": "UGMTC 2024 pushed me to the limits of my development skills. From learning the intricacies of a sport I was unfamiliar with to balancing evolving requirements, the project taught me the importance of having a clear requirement. ",
                    "marks": [
                    ],
                    "data": {
                    }
                  }
                ]
              },
              {
                "nodeType": "paragraph",
                "data": {
                },
                "content": [
                  {
                    "nodeType": "text",
                    "value": "",
                    "marks": [
                    ],
                    "data": {
                    }
                  }
                ]
              }
            ]
          }
        },
        "startDate": {
          "en-US": "2023-11-30T00:00+07:00"
        },
        "endDate": {
          "en-US": "2024-08-10T00:00+07:00"
        },
        "category": {
          "en-US": [
            "Event Website",
            "Sport Website"
          ]
        },
        "techstack": {
          "en-US": [
            "NextJS",
            "Tailwind",
            "Vercel",
            "Cloud Task",
            "Firebase"
          ]
        },
        "client": {
          "en-US": "Milzam Hakim Ayyasi"
        },
        "demoLink": {
          "en-US": "https://www.ugmtc.web.id/"
        }
      }
    },
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "6MVbuSObPEzeEMmcU4zSmV",
        "type": "Entry",
        "createdAt": "2024-04-07T12:08:04.111Z",
        "updatedAt": "2024-04-27T01:35:48.563Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 25,
        "publishedAt": "2024-04-27T01:35:48.563Z",
        "firstPublishedAt": "2024-04-07T12:13:19.969Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 3,
        "version": 26,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "automationTags": [
        ],
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "articles"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/entries/6MVbuSObPEzeEMmcU4zSmV"
      },
      "fields": {
        "thumbnail": {
          "en-US": {
            "sys": {
              "type": "Link",
              "linkType": "Asset",
              "id": "1rpcjWANkOmlJ3d5mIzBt2"
            }
          }
        },
        "title": {
          "en-US": "Flutter: How to implement Cupertino UI (iOS Style), with examples!"
        },
        "slug": {
          "en-US": "flutter-how-to-implement-cupertino-ui-ios-style-with-examples"
        },
        "isFeatured": {
          "en-US": true
        },
        "content": {
          "en-US": {
            "data": {
            },
            "content": [
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Hello, folks of the developer community 👋!",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "heading-3"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "I'm back with the promised article on ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "Flutter",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " 🔥, specifically in the Cupertino UI, or you may know it as the iOS-style implementation. For those who aren't familiar with Flutter, it's a framework by Google that provides an elegant UI Toolkit for multiplatform app development. Since its first release, Flutter has gained a lot of attention from the developer community. Thus, expanding its capabilities, in this context, various UI packages for developing a specific platform.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "In my Flutter learning progress, I tend to build usable projects out of a specific topic I want to cover. This time, out of my fascination with ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "Apple Design (Human Interface Guideline)",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " and combined with my favorite music playlist channel on YouTube: ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                      "uri": "https://www.youtube.com/channel/UCKxknVfRWj3YKZuE_qiWZ4Q"
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "marks": [
                        ],
                        "value": "Leeplay",
                        "nodeType": "text"
                      }
                    ],
                    "nodeType": "hyperlink"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ", I want to build a ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "music player app",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " with the native iOS looks.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Thankfully, the official Flutter team has provided the ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "italic"
                      }
                    ],
                    "value": "Cupertino package",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ", which contains iOS-style widgets and behaviors. After I developed the music player app, I want to share my experience, references, and an in-depth explanation of each iOS widget used in the project. Moreover, you may refer to the official docs for more code examples and class properties.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "italic"
                      }
                    ],
                    "value": "💡 Get the free UI Kit of Leeplay the music player app project ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                      "uri": "https://www.dropbox.com/sh/fcfozg0qldczduu/AAAqFDkFKkK9WBrTeM5X8hp0a?dl=0"
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "marks": [
                          {
                            "type": "italic"
                          }
                        ],
                        "value": "here",
                        "nodeType": "text"
                      }
                    ],
                    "nodeType": "hyperlink"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Based on the HIG, I have designed the music player app called Leeplay. You might notice that I used a unique primary color to stand out from the original Apple apps like Apple Music, which used Apple's color palettes. As I promised in my first intro post, I will share the design asset and the design reference (in Figma) for the Leeplay project. Cheers 🍻!",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Now, after the app's design intro, let's jump into the coding, and I will explain each widget I used along the way.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "Before initializing the project, I highly recommend using macOS for the development process where it has an iOS simulator and doesn't require any additional setup than Windows (Android). But again, our concern here is regarding the UI, thus allowing you to develop using Windows and its Android emulator.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "As usual, initialize the project using Flutter's command line itself.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "The first thing we're going to do is change the default ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "code"
                              }
                            ],
                            "value": "MaterialApp",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " parent widget into ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "code"
                              }
                            ],
                            "value": "CupertinoApp",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": ". Essentially, this widget will render a global iOS behavior across the app. Moreover, we could define other global behaviors like routes, theme, app's title, disabling debug banner, and the usual home widget.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "Let's continue working on the theming part. We will fill the theme property in ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "code"
                              }
                            ],
                            "value": "CupertinoApp",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " with the ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "code"
                              }
                            ],
                            "value": "CupertinoThemeData",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " class. Before getting into each property, I must highlight that the Cupertino package has provided many Cupertino-styled colors called the ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "code"
                              }
                            ],
                            "value": "CupertinoColors",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " class. As shown in the example below, the ThemeData class contains several theming properties such as:",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      },
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "content": [
                              {
                                "data": {
                                },
                                "content": [
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "code"
                                      }
                                    ],
                                    "value": "brightness",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": " is for rendering light or dark based on provided themes.",
                                    "nodeType": "text"
                                  }
                                ],
                                "nodeType": "paragraph"
                              }
                            ],
                            "nodeType": "list-item"
                          },
                          {
                            "data": {
                            },
                            "content": [
                              {
                                "data": {
                                },
                                "content": [
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": "The ",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "code"
                                      }
                                    ],
                                    "value": "primaryColor",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": " is pretty self-explanatory, where I used my accent color from the UI design asset.",
                                    "nodeType": "text"
                                  }
                                ],
                                "nodeType": "paragraph"
                              }
                            ],
                            "nodeType": "list-item"
                          },
                          {
                            "data": {
                            },
                            "content": [
                              {
                                "data": {
                                },
                                "content": [
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": "The ",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "code"
                                      }
                                    ],
                                    "value": "scaffoldBackgroundColor",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": " is for the CupertinoScaffold widget's background color.",
                                    "nodeType": "text"
                                  }
                                ],
                                "nodeType": "paragraph"
                              }
                            ],
                            "nodeType": "list-item"
                          },
                          {
                            "data": {
                            },
                            "content": [
                              {
                                "data": {
                                },
                                "content": [
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "code"
                                      }
                                    ],
                                    "value": "textTheme",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": " property is for specifying a whole bunch of text use-cases across the app, typically based on some iOS components. In this case, we will use ",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "code"
                                      }
                                    ],
                                    "value": "CupertinoTextThemeData",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": ", but I will only fill the default property. For the rest, I will create a static class with sets of properties with semantic naming and fill it with the ",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "code"
                                      }
                                    ],
                                    "value": "TextStyle",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": " widget that follows the HIG. Using a custom static class like this is faster than calling the root ",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "code"
                                      }
                                    ],
                                    "value": "CupertinoTheme",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": " via the current context. ",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "italic"
                                      }
                                    ],
                                    "value": "💡 Another bonus! I attached the custom ",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "code"
                                      }
                                    ],
                                    "value": "TextTheme",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": " class code. Download it ",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                      "uri": "https://www.dropbox.com/sh/fcfozg0qldczduu/AAAqFDkFKkK9WBrTeM5X8hp0a?dl=0"
                                    },
                                    "content": [
                                      {
                                        "data": {
                                        },
                                        "marks": [
                                        ],
                                        "value": "here",
                                        "nodeType": "text"
                                      }
                                    ],
                                    "nodeType": "hyperlink"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": "!",
                                    "nodeType": "text"
                                  }
                                ],
                                "nodeType": "paragraph"
                              }
                            ],
                            "nodeType": "list-item"
                          }
                        ],
                        "nodeType": "unordered-list"
                      }
                    ],
                    "nodeType": "list-item"
                  }
                ],
                "nodeType": "ordered-list"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "CupertinoApp(\n       debugShowCheckedModeBanner: false,\n       title: 'Leeplay',\n       theme: CupertinoThemeData(\n                 brightness: (state is LightTheme) ? Brightness.light : Brightness.dark,\n                 primaryColor: const Color(0xFF00B903),\n                 scaffoldBackgroundColor: state is LightTheme ? CupertinoColors.white : CupertinoColors.darkBackgroundGray,\n                 textTheme: CupertinoTextThemeData(\n                      textStyle: TextStyle(\n                          fontFamily: \"SFPro\",\n                          color: state is LightTheme\n                          ? CupertinoColors.black\n                          : CupertinoColors.white,\n                      ),\n               ),\n      ), \n      home: ...,\n)",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "Next on, we will continue slicing the UI pages. But, instead of elaborating on the process, I will only highlight the definition and implementation of every iOS-specific widget and package.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      },
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "content": [
                              {
                                "data": {
                                },
                                "content": [
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "bold"
                                      }
                                    ],
                                    "value": "Scaffold.",
                                    "nodeType": "text"
                                  }
                                ],
                                "nodeType": "paragraph"
                              },
                              {
                                "data": {
                                },
                                "content": [
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": "Flutter provides several iOS-styled widgets to scaffold an entire page. The basic one is ",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "code"
                                      }
                                    ],
                                    "value": "CupertinoScaffoldPage",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": ", where we can modify its background color, child, and navigation bar. Just think of this one as the usual ",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "code"
                                      }
                                    ],
                                    "value": "Scaffold",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": " widget. If you want to implement the tabbed views, we can use ",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "code"
                                      }
                                    ],
                                    "value": "CupertinoTabScaffold",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": ". This widget is robust because we can define our custom ",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                      {
                                        "type": "code"
                                      }
                                    ],
                                    "value": "BottomNavigationBar",
                                    "nodeType": "text"
                                  },
                                  {
                                    "data": {
                                    },
                                    "marks": [
                                    ],
                                    "value": " widget and set up the logic of displaying pages or the scaffold's children according to the current context and active index.",
                                    "nodeType": "text"
                                  }
                                ],
                                "nodeType": "paragraph"
                              }
                            ],
                            "nodeType": "list-item"
                          }
                        ],
                        "nodeType": "unordered-list"
                      }
                    ],
                    "nodeType": "list-item"
                  }
                ],
                "nodeType": "ordered-list"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "CupertinoTabScaffold(\n      tabBar: CupertinoTabBar(\n        items: const <BottomNavigationBarItem>[\n          BottomNavigationBarItem(\n            icon: Icon(CupertinoIcons.music_note_2, size: 22),\n            label: \"Play\"\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(CupertinoIcons.search, size: 24),\n            label: \"Search\"\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(CupertinoIcons.square_stack, size: 22),\n            label: \"Library\"\n          )\n        ],\n      ),\n      tabBuilder: (BuildContext context, int index) {\n        return CupertinoTabView(\n          builder: (BuildContext context) {\n            if(index == 0){\n              return const Homepage();\n            } else if (index == 1){\n              return const SearchPage();\n            } else if (index == 2){\n              return const SettingsPage();\n            } else {\n              return const Homepage();\n            }\n          },\n        );\n      },\n    );",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "- ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "Routes and Navigator widget.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "The routing and ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "Navigator",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " class of Flutter is still working pretty much the same. But, iOS got a little behavior difference, where we can swipe right to go back. Regarding widgets, we got the ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "CupertinoNavigationBar",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ", where we can modify many properties. But here, I only modified the leading icon, removing the default title and expanding the trailing size to contain two icons.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "CupertinoNavigationBar(\n        leading: CupertinoButton(\n          minSize: 0,\n          padding: EdgeInsets.zero,\n          onPressed: () {\n            Navigator.pop(context);\n          },\n          child: const Icon(CupertinoIcons.back, size: 22),\n        ),\n        trailing: Row(\n          mainAxisSize: MainAxisSize.min,\n          children: [\n            Padding(\n              padding: const EdgeInsets.only(right: 20.0, top: 2.0),\n              child: CupertinoButton(\n                minSize: 0,\n                padding: EdgeInsets.zero,\n                onPressed: () {\n                  Navigator.pop(context);\n                },\n                child: const Icon(CupertinoIcons.heart, size: 24),\n              ),\n            ),\n            CupertinoButton(\n              minSize: 0,\n              padding: EdgeInsets.zero,\n              onPressed: () {\n                Navigator.pop(context);\n              },\n              child: const Icon(CupertinoIcons.share, size: 22),\n            ),\n          ],\n        ),\n),",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "The other one is the ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "CupertinoTabBar",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " which should be assigned only on ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "CupertinoTabScaffold",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " as its bottom navbar. As usual, it's possible to modify any of its properties (height, background color, icon size, etc.), but by default, the widget already looks like the native iOS bottom navbar. In this project, I assigned several ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "BottomNavigationIcon",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " according to how many ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "CupertinoTabScaffold",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "'s children. Despite the ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "BottomNavigationIcon",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " widget being from the Flutter core widgets, it works pretty well here.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "CupertinoTabBar(\n        items: const <BottomNavigationBarItem>[\n          BottomNavigationBarItem(\n            icon: Icon(CupertinoIcons.music_note_2, size: 22),\n            label: \"Play\"\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(CupertinoIcons.search, size: 24),\n            label: \"Search\"\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(CupertinoIcons.square_stack, size: 22),\n            label: \"Library\"\n          )\n        ],\n      ),",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "- ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "Modal.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Cupertino design got several modals types: ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "ActionSheet",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ", ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "AlertDialog",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ", ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "ContextMenu",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ", and ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "BottomSheet",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ". In Flutter, aside from the ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "ContextMenu",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " widget, we can use the ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "showCupertino...()",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " methods to display these modal widgets. Then, we must assign the desired modal like ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "ActionSheet",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " in the method's builder. In this project, I only use the ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "BottomSheet",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " from the ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "italic"
                      }
                    ],
                    "value": "modal_bottom_sheet",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " package. For some detailed examples of the official modal widgets, you may refer to these links.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "showCupertinoModalBottomSheet(\n         context: context,\n         builder: (context) => const AboutLeeplayBottomSheet()\n);",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "- ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "Button.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "The next widget is ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "CupertinoButton",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ", which I used many times across the app. The button acts similarly to Material button, where you can provide pretty much all widgets as its child and ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "VoidCallback ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "as its ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "onPressed",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " method. By default, this button will have no background and a rectangular size (its ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "minSize",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " property). But, we can easily add background color via its property or a shortcut. Moreover, we can specify the button's padding, ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "minSize",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " (default wide), and the splash opacity (the iOS button will be fading in and out if tapped).",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "      CupertinoButton.filled(\n        child: Center(\n          child: Text(\n            \"Get started using NAVER\",\n            style: AppText.body.copyWith(\n              fontWeight: FontWeight.w600,\n              height: 1,\n              color: CupertinoColors.white,\n            ),\n          ),\n        ),\n        pressedOpacity: 0.8,\n        onPressed: () async {\n          context.read<AuthCubit>().loginWithLine();\n        },\n      ),",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "marks": [
                        ],
                        "value": "A little tip for me, if you want to mimic the Material's IconButton widget, we could modify the ",
                        "nodeType": "text"
                      },
                      {
                        "data": {
                        },
                        "marks": [
                          {
                            "type": "code"
                          }
                        ],
                        "value": "minSize",
                        "nodeType": "text"
                      },
                      {
                        "data": {
                        },
                        "marks": [
                        ],
                        "value": " property to 0, where the ",
                        "nodeType": "text"
                      },
                      {
                        "data": {
                        },
                        "marks": [
                          {
                            "type": "code"
                          }
                        ],
                        "value": "CupertinoButton",
                        "nodeType": "text"
                      },
                      {
                        "data": {
                        },
                        "marks": [
                        ],
                        "value": "'s size will adapt to its child's size (the Icon widget).",
                        "nodeType": "text"
                      }
                    ],
                    "nodeType": "paragraph"
                  }
                ],
                "nodeType": "blockquote"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "    CupertinoButton(\n          minSize: 0,\n          padding: EdgeInsets.zero,\n          onPressed: () {\n            Navigator.pop(context);\n          },\n          child: const Icon(CupertinoIcons.heart, size: 24),\n     ),",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "- ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "Text Field.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Flutter Cupertino provides two types of text field. The first one is the ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "italic"
                      }
                    ],
                    "value": "CupertinoSearchTextField",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " widget which provides a native look to the iOS search bar. But to get it tidy and pretty symmetric, I must modify its padding value, icon size, and icon spacing value a bit.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "CupertinoSearchTextField(\n         onChanged: ((value) {}),\n         placeholder: \"Search Leeplay's playlists from YouTube\",\n         padding: const EdgeInsets.all(12).copyWith(top: 10),\n         prefixInsets: const EdgeInsetsDirectional.only(start: 12),\n         suffixInsets: const EdgeInsetsDirectional.only(end: 12),\n)",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "The second one is the default ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "italic"
                      }
                    ],
                    "value": "CupertinoTextField",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ", which sadly I didn't use in this music app. Still, it behaves similarly to the default ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "italic"
                      }
                    ],
                    "value": "TextField",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ", where can specify its style, padding, and even disable the suggestion feature on the iOS keyboard. For more info on ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "italic"
                      }
                    ],
                    "value": "CupertinoTextField",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " class, you may refer to it ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                      "uri": "https://api.flutter.dev/flutter/cupertino/CupertinoTextField-class.html"
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "marks": [
                        ],
                        "value": "here",
                        "nodeType": "text"
                      }
                    ],
                    "nodeType": "hyperlink"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ". - ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "Loading Indicator.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Another widget in this project is the iOS loading indicator or ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "CupertinoActivityIndicator",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " in Flutter widgets. By default, this widget will render a grayish loading indicator, where we can modify its color and radius (circular size).",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "const CupertinoActivityIndicator(\n    radius: 16.0,\n),",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "- ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "Settings UI.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "For the settings page, I used a ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                      "uri": "https://pub.dev/"
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "marks": [
                        ],
                        "value": "pub.dev",
                        "nodeType": "text"
                      }
                    ],
                    "nodeType": "hyperlink"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " package called ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "italic"
                      }
                    ],
                    "value": "flutter_cupertino_settings",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ". This package is useful if you want to render an iOS-styled settings UI, where it provides several widgets like ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "CSHeader",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ", ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "CSControl",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " (slider), and ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "CSSelection",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " (dropdown), and ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "CSSwitch",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " (switch) to speed up the development. To get started, wrap your entire setting widgets under the ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "CupertinoSettings()",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ". Under the hood, these custom widgets still use some basic widgets like ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "Slider",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " and ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "code"
                      }
                    ],
                    "value": "Switch",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ", which you can read the docs here. Unfortunately, some of its styles are inconsistent, but they can be resolved manually. Still worth the time!",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "Finally, I've summarized all of the iOS / Cupertino widgets and packages that I've used across this project. There are indeed some other Cupertino widgets I haven't used in the Leeplay project, but I recommend you dive into the Flutter official docs on those widgets. As the final step of development, I will release this iOS-styled app. Whether you want to release it for the iOS platform or even force it to the Andoird platform, the production build process is the same and simple as explained in the Flutter docs ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                              "uri": "https://docs.flutter.dev/deployment/ios"
                            },
                            "content": [
                              {
                                "data": {
                                },
                                "marks": [
                                ],
                                "value": "here",
                                "nodeType": "text"
                              }
                            ],
                            "nodeType": "hyperlink"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": ".",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  }
                ],
                "nodeType": "ordered-list"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "In retrospect, I'm confident that Flutter is ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "robust enough",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " to build an iOS app with its native looks 🔥. But, honestly, with my little background in SwiftUI development, I think Flutter is ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "still outclassed by the native development tool",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ". Fortunately, the development experience using Flutter is ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "italic"
                      }
                    ],
                    "value": "quite exceptional",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": ". I appreciate that Flutter ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "still carries its big value of multiplatform",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " where their core widgets are perfectly usable and basically can render anything.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Thanks for reading folks, I'm open to any of your feedback and I do hope that the UI design file and the code template could be useful for you guys!",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Cheers, Andre 👋.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              }
            ],
            "nodeType": "document"
          }
        },
        "releasedDate": {
          "en-US": "2022-04-15T00:00+07:00"
        }
      }
    },
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "6zWvb9ZxxI1fUzah7cW6lE",
        "type": "Entry",
        "createdAt": "2024-10-12T05:10:19.055Z",
        "updatedAt": "2024-10-12T05:16:02.633Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 24,
        "publishedAt": "2024-10-12T05:16:02.633Z",
        "firstPublishedAt": "2024-10-12T05:16:02.633Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 1,
        "version": 25,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "fieldStatus": {
          "*": {
            "en-US": "published"
          }
        },
        "automationTags": [
        ],
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "project"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/entries/6zWvb9ZxxI1fUzah7cW6lE"
      },
      "fields": {
        "thumbnail": {
          "en-US": {
            "sys": {
              "type": "Link",
              "linkType": "Asset",
              "id": "57n14bITptIWx1dYJgxKs2"
            }
          }
        },
        "shortTitle": {
          "en-US": "TaniTera"
        },
        "slug": {
          "en-US": "tanitera"
        },
        "longTitle": {
          "en-US": "TaniTera"
        },
        "isFeatured": {
          "en-US": true
        },
        "caption": {
          "en-US": {
            "data": {
            },
            "content": [
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Android app that offers educational modules, productivity tools, and farming challenges tailored to Indonesian farmers' needs.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              }
            ],
            "nodeType": "document"
          }
        },
        "article": {
          "en-US": {
            "data": {
            },
            "content": [
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "TaniTera",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " is a gamified Android platform aimed at enhancing the productivity and education of Indonesian farmers for a more prosperous future. The app offers educational materials with certification, monthly farming challenges with leaderboards, and a crop production/farmland tracker to boost engagement and improve yields. It’s a mobile project with a practical purpose and an ambitious scope.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "The Idea",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "heading-3"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "TaniTera is part of a larger joint research project by lecturers from Universitas Gadjah Mada’s Faculty of Agriculture and Faculty of Social and Political Science. I got involved through a fellow student from the same cohort, who was part of the research team. At first, the proposal was vague, only hinting at the idea of a gamified tool for improving farmers' productivity. After several meetings, the concept took shape into three core features:",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Education",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": ", inspired by Ruangguru, with textual, video, and quiz-based learning materials. Farmers would earn certificates upon completing modules.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Productivity tools",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": ", including a farmland tracker and crop production ",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      },
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "notes to manage their agricultural activities.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Community engagement",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": ", through monthly farming challenges and leaderboards to foster competition and collaboration among users.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  }
                ],
                "nodeType": "ordered-list"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "The app also needed essential elements such as a privacy policy, user authentication, and a tailored onboarding system. Farmers would select one or more commodities to ensure the app provided relevant content based on their crops.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "The Approach",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "heading-3"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "One of the first challenges was handling farmer profiles and their chosen commodities. I approached it similarly to Duolingo: just as Duolingo tailors content based on selected languages, TaniTera would adapt based on the user’s selected crops. The educational structure was another key element. As requested, it followed this hierarchy:",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Module",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " → ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Chapter",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " → ",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Materials",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": " (articles, videos, or quizzes).",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "Certificates would be awarded upon module completion, though initially, they would be issued manually. The complexity of this structure required careful database design and optimization to ensure smooth performance.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  }
                ],
                "nodeType": "unordered-list"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "The productivity features were relatively straightforward CRUD systems for tracking farmland data and crop yields. For development, I opted for ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "Flutter",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " due to my familiarity with it, ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "Firebase",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " as the backend service, and ",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "value": "Contentful CMS",
                    "nodeType": "text"
                  },
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": " to manage educational content.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Challenges During Development",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "heading-3"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Working with two other developers, the development moved quickly but was not without obstacles. Some of the biggest challenges included:",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Contentful CMS",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": ": Using Contentful was a mistake. Its lack of an official SDK for Flutter and limited third-party libraries made development unnecessarily difficult. The unofficial library I found was inadequate, requiring significant customization to properly display RichText and embedded content in articles.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  },
                  {
                    "data": {
                    },
                    "content": [
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                              {
                                "type": "bold"
                              }
                            ],
                            "value": "Flutter’s BuildContext",
                            "nodeType": "text"
                          },
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": ": After spending most of my time on web development, I found ",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      },
                      {
                        "data": {
                        },
                        "content": [
                          {
                            "data": {
                            },
                            "marks": [
                            ],
                            "value": "Flutter’s BuildContext cumbersome. Unlike React, where a ContextProvider allows all child components to access the same state, Flutter’s BLoC pattern requires wrapping child components manually. While Flutter offers similar functionality, the BLoC library's author discourages it due to potential performance issues, resulting in a bloated codebase.",
                            "nodeType": "text"
                          }
                        ],
                        "nodeType": "paragraph"
                      }
                    ],
                    "nodeType": "list-item"
                  }
                ],
                "nodeType": "ordered-list"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Publishing",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "heading-3"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "TaniTera became the first app I published on Google Play, but the process was more tedious than expected. Google’s new policy requires testing with at least 20 users before public release, although the absence of monetization simplified some aspects. During the final review, the app was initially rejected, requiring additional details. I provided a screen recording of the app’s functionality and registered a dummy account for Google’s reviewers to test. After a few days, TaniTera was successfully approved for production release.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "Conclusion",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "heading-3"
              },
              {
                "data": {
                },
                "content": [
                  {
                    "data": {
                    },
                    "marks": [
                    ],
                    "value": "TaniTera has been a significant learning experience, blending technical complexity with social impact. Managing evolving requirements, optimizing content delivery, and navigating platform policies made the project more challenging than anticipated. Yet, delivering an app designed to empower farmers with both education and engagement tools has been an undeniably meaningful accomplishment.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "paragraph"
              }
            ],
            "nodeType": "document"
          }
        },
        "startDate": {
          "en-US": "2024-05-01T00:00+07:00"
        },
        "endDate": {
          "en-US": "2024-08-01T00:00+07:00"
        },
        "category": {
          "en-US": [
            "productivity",
            "mobile",
            "flutter",
            "agriculture"
          ]
        },
        "techstack": {
          "en-US": [
            "Flutter",
            "Firebase",
            "Contentful",
            "Google Play Console"
          ]
        },
        "client": {
          "en-US": "Alfath Bagus Panuntun El Nur Indonesia, S.I.P., M.A."
        }
      }
    }
  ],
  "assets": [
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "7d6H2QePhRC2YkkxkchQrz",
        "type": "Asset",
        "createdAt": "2024-04-07T08:41:07.292Z",
        "updatedAt": "2024-04-07T08:41:41.124Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 3,
        "publishedAt": "2024-04-07T08:41:41.124Z",
        "firstPublishedAt": "2024-04-07T08:41:41.124Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 1,
        "version": 4,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/assets/7d6H2QePhRC2YkkxkchQrz"
      },
      "fields": {
        "title": {
          "en-US": "Rectangle 4"
        },
        "description": {
          "en-US": ""
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/dobqt42vphlv/7d6H2QePhRC2YkkxkchQrz/1b6b0e89c555fbb24fa2501452a290b0/Rectangle_4.png",
            "details": {
              "size": 1362,
              "image": {
                "width": 520,
                "height": 314
              }
            },
            "fileName": "Rectangle 4.png",
            "contentType": "image/png"
          }
        }
      }
    },
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "1rpcjWANkOmlJ3d5mIzBt2",
        "type": "Asset",
        "createdAt": "2024-04-27T01:34:58.167Z",
        "updatedAt": "2024-04-27T01:35:11.129Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 3,
        "publishedAt": "2024-04-27T01:35:11.129Z",
        "firstPublishedAt": "2024-04-27T01:35:11.129Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 1,
        "version": 4,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/assets/1rpcjWANkOmlJ3d5mIzBt2"
      },
      "fields": {
        "title": {
          "en-US": "nNG x7ajt"
        },
        "description": {
          "en-US": ""
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/dobqt42vphlv/1rpcjWANkOmlJ3d5mIzBt2/6c16812e2eb3aa5daca4c2e6be51ffee/nNG_x7ajt.avif",
            "details": {
              "size": 37624,
              "image": {
                "width": 1600,
                "height": 840
              }
            },
            "fileName": "nNG_x7ajt.avif",
            "contentType": "image/avif"
          }
        }
      }
    },
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "pxddQ6RhizyHF5sjGvC2R",
        "type": "Asset",
        "createdAt": "2024-04-28T03:43:23.529Z",
        "updatedAt": "2024-04-28T03:50:46.532Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 5,
        "publishedAt": "2024-04-28T03:50:46.532Z",
        "firstPublishedAt": "2024-04-28T03:43:42.096Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 2,
        "version": 6,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/assets/pxddQ6RhizyHF5sjGvC2R"
      },
      "fields": {
        "title": {
          "en-US": "Flow"
        },
        "description": {
          "en-US": "Token Encryption Flow"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/dobqt42vphlv/pxddQ6RhizyHF5sjGvC2R/0b53ae0d14726fa3b23c33ade583a998/Flow.png",
            "details": {
              "size": 253757,
              "image": {
                "width": 5216,
                "height": 3616
              }
            },
            "fileName": "Flow.png",
            "contentType": "image/png"
          }
        }
      }
    },
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "1Ode2RkhjpIKtt4DIkBKxX",
        "type": "Asset",
        "createdAt": "2024-04-28T03:54:10.629Z",
        "updatedAt": "2024-04-28T03:55:16.046Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 3,
        "publishedAt": "2024-04-28T03:55:16.046Z",
        "firstPublishedAt": "2024-04-28T03:55:16.046Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 1,
        "version": 4,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/assets/1Ode2RkhjpIKtt4DIkBKxX"
      },
      "fields": {
        "title": {
          "en-US": "Home"
        },
        "description": {
          "en-US": ""
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/dobqt42vphlv/1Ode2RkhjpIKtt4DIkBKxX/19c8f7367101d5d373eb34bb9e26cc63/Home.png",
            "details": {
              "size": 5076071,
              "image": {
                "width": 2872,
                "height": 2060
              }
            },
            "fileName": "Home.png",
            "contentType": "image/png"
          }
        }
      }
    },
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "1jBWNCZY1WbIwTtManuVSl",
        "type": "Asset",
        "createdAt": "2024-08-14T09:33:49.426Z",
        "updatedAt": "2024-08-14T09:34:08.972Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 3,
        "publishedAt": "2024-08-14T09:34:08.972Z",
        "firstPublishedAt": "2024-08-14T09:34:08.972Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 1,
        "version": 4,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "fieldStatus": {
          "*": {
            "en-US": "published"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/assets/1jBWNCZY1WbIwTtManuVSl"
      },
      "fields": {
        "title": {
          "en-US": "Capture-2024-08-14-163331"
        },
        "description": {
          "en-US": ""
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/dobqt42vphlv/1jBWNCZY1WbIwTtManuVSl/aeb915f52302d6df8aff22f01af98bca/Capture-2024-08-14-163331.png",
            "details": {
              "size": 3123157,
              "image": {
                "width": 2788,
                "height": 1540
              }
            },
            "fileName": "Capture-2024-08-14-163331.png",
            "contentType": "image/png"
          }
        }
      }
    },
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "1FMmgP5RYflmvbCGRkcKvS",
        "type": "Asset",
        "createdAt": "2024-10-11T04:45:12.905Z",
        "updatedAt": "2024-10-11T04:45:29.537Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 3,
        "publishedAt": "2024-10-11T04:45:29.537Z",
        "firstPublishedAt": "2024-10-11T04:45:29.537Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 1,
        "version": 4,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "fieldStatus": {
          "*": {
            "en-US": "published"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/assets/1FMmgP5RYflmvbCGRkcKvS"
      },
      "fields": {
        "title": {
          "en-US": "Screenshot 2024-10-04 at 22.36.57 1"
        },
        "description": {
          "en-US": ""
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/dobqt42vphlv/1FMmgP5RYflmvbCGRkcKvS/99a6af10cf7e6e8b4724b48dce0de965/Screenshot_2024-10-04_at_22.36.57_1.png",
            "details": {
              "size": 141983,
              "image": {
                "width": 825,
                "height": 516
              }
            },
            "fileName": "Screenshot 2024-10-04 at 22.36.57 1.png",
            "contentType": "image/png"
          }
        }
      }
    },
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "4HribKCqPoXKUJV8R3lGlU",
        "type": "Asset",
        "createdAt": "2024-10-11T04:46:53.914Z",
        "updatedAt": "2024-10-11T04:47:07.011Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 3,
        "publishedAt": "2024-10-11T04:47:07.011Z",
        "firstPublishedAt": "2024-10-11T04:47:07.011Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 1,
        "version": 4,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "fieldStatus": {
          "*": {
            "en-US": "published"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/assets/4HribKCqPoXKUJV8R3lGlU"
      },
      "fields": {
        "title": {
          "en-US": "Dashboard - LG - Overview (Active Containers)"
        },
        "description": {
          "en-US": ""
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/dobqt42vphlv/4HribKCqPoXKUJV8R3lGlU/922f386966d0254c06df60760b31893b/Dashboard_-_LG_-_Overview__Active_Containers_.png",
            "details": {
              "size": 66470,
              "image": {
                "width": 922,
                "height": 656
              }
            },
            "fileName": "Dashboard - LG - Overview (Active Containers).png",
            "contentType": "image/png"
          }
        }
      }
    },
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "u8Vc9t6IBLTJDQ2PBl3Ha",
        "type": "Asset",
        "createdAt": "2024-10-12T03:53:19.536Z",
        "updatedAt": "2024-10-12T03:53:54.839Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 3,
        "publishedAt": "2024-10-12T03:53:54.839Z",
        "firstPublishedAt": "2024-10-12T03:53:54.839Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 1,
        "version": 4,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "fieldStatus": {
          "*": {
            "en-US": "published"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/assets/u8Vc9t6IBLTJDQ2PBl3Ha"
      },
      "fields": {
        "title": {
          "en-US": "Untitled-2024-10-12-1040"
        },
        "description": {
          "en-US": ""
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/dobqt42vphlv/u8Vc9t6IBLTJDQ2PBl3Ha/1a8539a0d99b237373773646b2bdb2ab/Untitled-2024-10-12-1040.png",
            "details": {
              "size": 120113,
              "image": {
                "width": 2058,
                "height": 766
              }
            },
            "fileName": "Untitled-2024-10-12-1040.png",
            "contentType": "image/png"
          }
        }
      }
    },
    {
      "metadata": {
        "tags": [
        ],
        "concepts": [
        ]
      },
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "id": "57n14bITptIWx1dYJgxKs2",
        "type": "Asset",
        "createdAt": "2024-10-12T05:15:22.927Z",
        "updatedAt": "2024-10-12T05:15:56.999Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "publishedVersion": 3,
        "publishedAt": "2024-10-12T05:15:56.999Z",
        "firstPublishedAt": "2024-10-12T05:15:56.999Z",
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "publishedCounter": 1,
        "version": 4,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "fieldStatus": {
          "*": {
            "en-US": "published"
          }
        },
        "urn": "crn:contentful:::content:spaces/dobqt42vphlv/environments/master/assets/57n14bITptIWx1dYJgxKs2"
      },
      "fields": {
        "title": {
          "en-US": "Slide 16 9 - 1"
        },
        "description": {
          "en-US": ""
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/dobqt42vphlv/57n14bITptIWx1dYJgxKs2/bf4fc31c4a9657e7f5487123de7fe56a/Slide_16_9_-_1.png",
            "details": {
              "size": 1022516,
              "image": {
                "width": 1920,
                "height": 1080
              }
            },
            "fileName": "Slide 16_9 - 1.png",
            "contentType": "image/png"
          }
        }
      }
    }
  ],
  "locales": [
    {
      "name": "English (United States)",
      "code": "en-US",
      "fallbackCode": null,
      "default": true,
      "contentManagementApi": true,
      "contentDeliveryApi": true,
      "optional": false,
      "sys": {
        "type": "Locale",
        "id": "43mAtlcqCqixLAy5RK2BY9",
        "version": 1,
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "environment": {
          "sys": {
            "type": "Link",
            "linkType": "Environment",
            "id": "master",
            "uuid": "524bd677-fe09-4db2-9fd1-80637094d34c"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "createdAt": "2023-06-26T14:41:55Z",
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedAt": "2023-06-26T14:41:55Z"
      }
    }
  ],
  "webhooks": [
  ],
  "roles": [
    {
      "name": "Author",
      "description": "Allows editing of content",
      "policies": [
        {
          "effect": "allow",
          "actions": [
            "create"
          ],
          "constraint": {
            "and": [
              {
                "equals": [
                  {
                    "doc": "sys.type"
                  },
                  "Entry"
                ]
              }
            ]
          }
        },
        {
          "effect": "allow",
          "actions": [
            "read"
          ],
          "constraint": {
            "and": [
              {
                "equals": [
                  {
                    "doc": "sys.type"
                  },
                  "Entry"
                ]
              }
            ]
          }
        },
        {
          "effect": "allow",
          "actions": [
            "update"
          ],
          "constraint": {
            "and": [
              {
                "equals": [
                  {
                    "doc": "sys.type"
                  },
                  "Entry"
                ]
              }
            ]
          }
        },
        {
          "effect": "allow",
          "actions": [
            "create"
          ],
          "constraint": {
            "and": [
              {
                "equals": [
                  {
                    "doc": "sys.type"
                  },
                  "Asset"
                ]
              }
            ]
          }
        },
        {
          "effect": "allow",
          "actions": [
            "read"
          ],
          "constraint": {
            "and": [
              {
                "equals": [
                  {
                    "doc": "sys.type"
                  },
                  "Asset"
                ]
              }
            ]
          }
        },
        {
          "effect": "allow",
          "actions": [
            "update"
          ],
          "constraint": {
            "and": [
              {
                "equals": [
                  {
                    "doc": "sys.type"
                  },
                  "Asset"
                ]
              }
            ]
          }
        }
      ],
      "permissions": {
        "ContentModel": [
          "read"
        ],
        "Settings": [
        ],
        "ContentDelivery": [
        ],
        "Environments": [
        ],
        "EnvironmentAliases": [
        ],
        "Tags": [
        ]
      },
      "sys": {
        "type": "Role",
        "id": "43K9shngiJxYfhZnzuVwl7",
        "version": 0,
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "createdAt": "2023-06-26T14:41:55Z",
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedAt": "2023-06-26T14:41:55Z"
      }
    },
    {
      "name": "Editor",
      "description": "Allows editing, publishing and archiving of content",
      "policies": [
        {
          "effect": "allow",
          "actions": "all",
          "constraint": {
            "and": [
              {
                "equals": [
                  {
                    "doc": "sys.type"
                  },
                  "Entry"
                ]
              }
            ]
          }
        },
        {
          "effect": "allow",
          "actions": "all",
          "constraint": {
            "and": [
              {
                "equals": [
                  {
                    "doc": "sys.type"
                  },
                  "Asset"
                ]
              }
            ]
          }
        }
      ],
      "permissions": {
        "ContentModel": [
          "read"
        ],
        "Settings": [
        ],
        "ContentDelivery": [
        ],
        "Environments": [
        ],
        "EnvironmentAliases": [
        ],
        "Tags": [
        ]
      },
      "sys": {
        "type": "Role",
        "id": "43L2YWhwmtH3ZZorpuNhm5",
        "version": 0,
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "createdAt": "2023-06-26T14:41:55Z",
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedAt": "2023-06-26T14:41:55Z"
      }
    },
    {
      "name": "Translator",
      "description": "Allows editing of localized fields in the specified language",
      "policies": [
        {
          "effect": "allow",
          "actions": [
            "read"
          ],
          "constraint": {
            "and": [
              {
                "equals": [
                  {
                    "doc": "sys.type"
                  },
                  "Entry"
                ]
              }
            ]
          }
        },
        {
          "effect": "allow",
          "actions": [
            "read"
          ],
          "constraint": {
            "and": [
              {
                "equals": [
                  {
                    "doc": "sys.type"
                  },
                  "Asset"
                ]
              }
            ]
          }
        },
        {
          "effect": "allow",
          "actions": [
            "update"
          ],
          "constraint": {
            "and": [
              {
                "equals": [
                  {
                    "doc": "sys.type"
                  },
                  "Entry"
                ]
              },
              {
                "paths": [
                  {
                    "doc": "fields.%.%"
                  }
                ]
              }
            ]
          }
        },
        {
          "effect": "allow",
          "actions": [
            "update"
          ],
          "constraint": {
            "and": [
              {
                "equals": [
                  {
                    "doc": "sys.type"
                  },
                  "Asset"
                ]
              },
              {
                "paths": [
                  {
                    "doc": "fields.%.%"
                  }
                ]
              }
            ]
          }
        }
      ],
      "permissions": {
        "ContentModel": [
          "read"
        ],
        "Settings": [
        ],
        "ContentDelivery": [
        ],
        "Environments": [
        ],
        "EnvironmentAliases": [
        ],
        "Tags": [
        ]
      },
      "sys": {
        "type": "Role",
        "id": "43MdAw2RuDOump3fHUNUZn",
        "version": 0,
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "dobqt42vphlv"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "createdAt": "2023-06-26T14:41:55Z",
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "5mj7TfaNXDpOIpSHnHEC4W"
          }
        },
        "updatedAt": "2023-06-26T14:41:55Z"
      }
    }
  ]
}